default-environment: &default-environment
  docker:
    - image: circleci/node:8.11
  working_directory: ~/repo

step-restore-build-cache: &step-restore-build-cache
  restore_cache:
    keys:
    - v1-dependencies-{{ checksum "package.json" }}-
    - v1-dependencies-{{ checksum "package.json" }}-
    # fallback to using the latest cache if no exact match is found
    - v1-dependencies--

step-save-build-cache: &step-save-build-cache
  save_cache:
    paths:
      - node_modules
    key: v1-dependencies-{{ checksum "package.json" }}-

step-add-local-bin-to-path: &step-add-local-bin-to-path
  run:
    name: Add local bin to PATH
    command: |
      echo 'export PATH=/home/circleci/.local/bin:$PATH' >> $BASH_ENV
      source $BASH_ENV

step-update-apt: &step-update-apt
  run:
    name: Update APT
    command: sudo apt-get -y -qq update

step-install-python: &step-install-python
  run:
    name: Install Python
    command: sudo apt-get -y -qq install python3.4-dev

step-install-pip: &step-install-pip
  run:
    name: Install PIP
    command: |
      curl -O https://bootstrap.pypa.io/get-pip.py
      python3.4 get-pip.py --user

step-install-awscli: &step-install-awscli
  run:
    name: Install AWS CLI
    command: pip install awscli --upgrade --user

step-install-serverless: &step-install-serverless
  run:
    name: Install Serverless Framework
    command: sudo npm install -g serverless

step-install-production-deps: &step-install-production-deps
  run:
    name: Install NPM Production dependencies
    command: npm install --production

version: 2
jobs:
  build:
    <<: *default-environment
    steps:
      - checkout
      - <<: *step-restore-build-cache
      - run: npm install
      - <<: *step-save-build-cache

  test:
    <<: *default-environment
    steps:
      - checkout
      - <<: *step-restore-build-cache
      - run:
          name: lint
          command: npm run lint
      - run:
          name: typecheck
          command: npm run typecheck
      - run:
          name: test
          command: npm test
          environment:
            JEST_JUNIT_OUTPUT: test-reports/tests.xml
      - store_test_results:
          path: test-reports/tests.xml

  deploy_dev:
    <<: *default-environment
    steps:
      - checkout
      - <<: *step-add-local-bin-to-path
      - <<: *step-update-apt
      - <<: *step-install-python
      - <<: *step-install-pip
      - <<: *step-install-awscli
      - <<: *step-restore-build-cache
      - <<: *step-install-serverless
      - <<: *step-install-production-deps
      - run: serverless deploy --no-confirm --region eu-west-2 --stage dev --verbose

  deploy_prod:
    <<: *default-environment
    steps:
      - checkout
      - <<: *step-add-local-bin-to-path
      - <<: *step-update-apt
      - <<: *step-install-python
      - <<: *step-install-pip
      - <<: *step-install-awscli
      - <<: *step-restore-build-cache
      - <<: *step-install-serverless
      - <<: *step-install-production-deps
      - run: serverless deploy --no-confirm --region eu-west-2 --stage prod --verbose

workflows:
  version: 2
  integration:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - develop
                - master
      - test:
          requires:
            - build
  deployment:
    jobs:
      - build:
          filters:
            branches:
              only:
                - develop
                - master
      - test:
          requires:
            - build
      - deploy_dev:
          filters:
            branches:
              only:
                - develop
          requires:
            - test
      - approve_prod:
          type: approval
          filters:
            branches:
              only: master
          requires:
            - test
      - deploy_prod:
          filters:
            branches:
              only: master
          requires:
            - approve_prod
